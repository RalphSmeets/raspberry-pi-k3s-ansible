{% for application_type in application_set.types %}
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: {{ application_set.cluster | lower }}-{{ application_type.type }}-provisioning 
  namespace: {{ argocd_namespace }}
  labels:
{{ platform_office_hour_support_devops_labels | to_nice_yaml(width=1337) | indent(4,true) }}
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
    - git:
        repoURL: {{ application_set.repo_url }}
        revision: HEAD
        files:
          - path: "{{ application_type.git_files_path }}"
  template:
    metadata:
      name: "{% raw %}{{ base .path.path | normalize }}{% endraw %}"
      labels:
{{ platform_office_hour_support_devops_labels | to_nice_yaml(width=1337) | indent(8,true) }}
    spec:
      project: {{ application_set.project }}
      destination:
        name: "{{ application_set.cluster }}"
{% if application_set.namespace.endswith('-*') %}
        namespace: "{{ application_set.namespace[:-2] }}{% raw %}{{ base .path.path | normalize }}{% endraw %}"
{% else %}
        namespace: "{{ application_set.namespace }}"
{% endif %}
{% if application_type.type == 'helm' %}
      source:
        repoURL: '{{ application_set.repo_url }}'
        path: "./"
{% raw %}
        plugin:
          env:
            - name: HELM_REPO_URL
              value: '{{ .chart.repo_url }}'
            - name: HELM_CHART_NAME
              value: '{{ .chart.name }}'
            - name: HELM_CHART_VERSION
              value: '{{ .chart.version }}'
            - name: HELM_VALUES_FILE
              value: "{{ .path.path }}/values.yaml"
{% endraw %}
          
{% else %}
      source:
        repoURL: "{% raw %}{{ .git.repo }}{% endraw %}"
        targetRevision: HEAD
        path: overlays/{{ application_set.project }}
{% endif %}
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
{% if application_set.namespace.endswith('-*') %}
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true
      ignoreDifferences:
        - group: monitoring.coreos.com
          kind: ServiceMonitor
          # See: https://github.com/argoproj/argo-cd/issues/11074
          jqPathExpressions:
            - .spec.endpoints[]?.relabelings[]?.action
        - group: monitoring.coreos.com
          kind: Prometheus
          jqPathExpressions:
            - .spec.remoteWrite[]?.writeRelabelConfigs[]?.action
{% endif %}
{% endfor %}
