{% for application_type in application_set.types %}
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: '{{ application_set.github_project | lower }}-{{ application_type.type }}-applications'
  namespace: {{ argocd_namespace }}
  labels:
{{ platform_office_hour_support_devops_labels | to_nice_yaml(width=1337) | indent(4,true) }}
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
    - matrix:
        generators:
          - scmProvider:
              githubServer:
                allBranches: false
                api: https://api.github.com
                basicAuth:
                  passwordRef:
                    key: password
                    secretName: argocd-github-password
                  username: {{ argocd.github.username }}
                project: '{{ application_set.github_project }}'
              filters:
                - pathsExist:
                    - base/kustomization.yml
          - git:
              files:
{% for path in application_type.git_files_path %}
                - path: '{{ path }}'
{% endfor %}
{% raw %}
              repoURL: '{{ .url }}'
              revision: HEAD
              values:
                overlay: '{{ index .path.segments }}'
                dynamic_overlays: list "ont" "itest"
                prefix: '{{ index .path.segments 1 }}'
                suffix: '{{ has .values.overlay .values.dynamic_overlays | ternary ( last . path.segments | print "-%s" ) "" }}'
                overlay: '{{ index .path.segments 1 }}'
                cluster: '{{ has .values.overlay ( list "pro") | ternary "pro-cluster" "ota-cluster" }}'
                namespace: '{{ has .values.overlay .values.dynamic_overlays | ternary "dev-" ""}}{{ has .values.overlay .values.dynamic_overlays | ternary .repository .values.overlay }}{{ .values.suffix }}'
  template:
    metadata:
      name: '{{ .values.prefix }}-{{ .repository }}-{{ .values.suffix }}' 
    spec:
      destination:
        name: '{{ .values.cluster }}'
        namespace: '{{ .values.namespace }}'
      project: '{{ .values.overlay }}'
      source:
        repoURL: "{{ .url }}"
        targetRevision: HEAD
{% endraw %}
{% if application_type.type == 'helm' %}
{% raw %}
        path: "./"
        plugin:
          env:
            - name: HELM_CHART_VERSION
              value: "{{ .chart.version }}"
            - name: HELM_REPO_URL
              value: "{{ .chart.repo_url }}"
            - name: HELM_CHART_NAME
              value: "{{ .chart.name }}"
            - name: HELM_VALUES_FILE
              value: "{{ .path.path }}/values.yaml"
{% endraw %}
{% else %}
{% raw %}
        path: overlays/{{ .values.overlay }}
{% endraw %}
{% endif %}
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true     
{% endfor %}