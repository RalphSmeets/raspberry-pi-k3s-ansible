{% for application_type in application_set.types %}
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: "{{ application_set.cluster }}-{{ application_type.type }}-provisioning"
  namespace: {{ argocd_namespace }}
  labels:
{{ platform_office_hour_support_devops_labels | to_nice_yaml(width=1337) | indent(4,true) }}
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
    - git:
        repoURL: "{{ cjib_git_clone_ssh_url }}/{{ application_set.repo_url }}"
        revision: HEAD
        files:
          - path: "{{ application_type.git_files_path }}"
  template:
    metadata:
      name: "{{ application_set.project }}-{% raw %}{{ base .path.path | normalize }}{% endraw %}"
      labels:
{{ platform_office_hour_support_devops_labels | to_nice_yaml(width=1337) | indent(8,true) }}
    spec:
      project: {{ application_set.project }}
      destination:
        name: "{{ application_set.cluster }}"
{% if application_set.namespace.endswith('-*') %}
        namespace: "{{ application_set.namespace[:-2] }}{% raw %}{{ base .path.path | normalize }}{% endraw %}"
{% else %}
        namespace: "{{ application_set.namespace }}"
{% endif %}
{% if application_type.type == 'helm' %}
      source:
        path: "./"
        repoURL: {{ cjib_git_clone_ssh_url }}/{{ application_set.repo_url }}
        targetRevision: HEAD
{% raw %}
        plugin:
          env:
            - name: HELM_CHART_VERSION
              value: "{{ .chart.version }}"
            - name: HELM_REPO_URL
              value: "{{ .chart.repo_url }}"
            - name: HELM_CHART_NAME
              value: "{{ .chart.name }}"
            - name: HELM_VALUES_FILE
              value: "{{ .path.path }}/values.yaml"
{% endraw %}
{% else %}
      source:
        repoURL: "{% raw %}{{ .git.repo }}{% endraw %}"
        targetRevision: HEAD
        path: overlays/{{ application_set.project }}
        plugin:
          env:
{% raw %}
            - name: DOCKER_IMAGE
              value: '{{ .image.repo }}:{{ .image.tag }}'
            - name: TAG
              value: '{{ .image.tag }}'
            - name: RND
              value: '{{ base .path.path | normalize | splitList "-" | last }}'
{% endraw %}
{% endif %}
            - name: NAMESPACE
{% if application_set.namespace.endswith('-*') %}
              value: "{{ application_set.namespace[:-2] }}{% raw %}{{ base .path.path | normalize }}{% endraw %}"
{% else %}
              value: "{{ application_set.namespace }}"
{% endif %}

            - name: APPS_OTA_DOMAIN
              value: {{ (argocd.cluster.credentials | selectattr('name', 'equalto', 'ota-cluster') | map(attribute='domain'))[0] | default('NOCLUSTER')}}
            - name: APPS_PRO_DOMAIN
              value: {{ (argocd.cluster.credentials | selectattr('name', 'equalto', 'pro-cluster') | map(attribute='domain'))[0] | default('NOCLUSTER')}}
            - name: APPS_SHS_DOMAIN
              value: {{ (argocd.cluster.credentials | selectattr('name', 'equalto', 'shs-cluster') | map(attribute='domain'))[0] | default('NOCLUSTER')}}
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
{% if application_set.namespace.endswith('-*') %}
        syncOptions:
          - CreateNamespace=true
{% endif %}
      ignoreDifferences:
        - group: "*"
          kind: "*"
          managedFieldsManagers:
          - vault-admission
{% endfor %}